{"ast":null,"code":"var _jsxFileName = \"/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json';\nimport Restaurant from './Restaurant/Restaurant';\nimport firebase from '../../axios-restaurants';\nimport styles from './Restaurants.module.css';\nimport Autocomplete from 'react-google-autocomplete';\n\nconst Restaurants = () => {\n  const [businesses, setBusinesses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchLocation, setSearchLocation] = useState(null);\n\n  const deleteBusiness = index => {\n    const newBus = [...businesses];\n    newBus.splice(index, 1);\n    setBusinesses(newBus);\n  };\n\n  const updateVisited = (newBus, index) => {\n    deleteBusiness(index);\n    firebase.post('/visited.json', {\n      id: newBus.business_id\n    }).catch(err => console.log(err));\n  };\n\n  const updateVisit = (newBus, index) => {\n    deleteBusiness(index);\n    firebase.post('/visit.json', {\n      id: newBus.business_id\n    }).catch(err => console.log(err));\n  };\n\n  async function getRestaurants() {\n    let myVisit = [];\n    let myVisited = []; // await axios.get('https://local-byte.firebaseio.com/visited.json')\n    // .then(res => {\n    //     const tmpVisited = Object.keys(res.data)\n    //     const visitedIds = tmpVisited.map((key) => {\n    //         return res.data[key].id\n    //     })\n    //     myVisited = [...visitedIds];\n    // }).catch(err => {\n    //     console.log(err)\n    // })\n    // await axios.get('https://local-byte.firebaseio.com/visit.json')\n    // .then(res => {\n    //     const tmpVisit = Object.keys(res.data)\n    //     const visitIds = tmpVisit.map((key) => {\n    //         return res.data[key].id\n    //     })\n    //     myVisit = [...visitIds];\n    // }).catch(err => {\n    //     console.log(err)\n    // })\n    // if (BusinessDataset){\n    //     const myRest = myVisit.concat(myVisited)\n    //     const homeRest = BusinessDataset.filter( ( el ) => !myRest.includes( el.business_id ) );\n    //     setBusinesses(homeRest)\n    //     setLoading(false)\n    //     return\n    // }\n\n    await axios.get(\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search\", {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        location: searchLocation,\n        categories: 'mexican'\n      }\n    }).then(res => {\n      console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`);\n      console.log(res.data);\n      setBusinesses(res.data.businesses);\n      setLoading(false);\n    }).catch(err => {\n      console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`);\n      console.log(err);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    if (searchLocation) {\n      getRestaurants();\n    }\n  }, [searchLocation]); //rating, price, phone, categories, name\n\n  const returnedRes = businesses.map((business, index) => {\n    console.log(business);\n    return /*#__PURE__*/React.createElement(Restaurant, {\n      visit: () => updateVisit(business, index),\n      visited: () => updateVisited(business, index),\n      key: business.id,\n      name: business.name,\n      address: business.address,\n      city: business.city,\n      stars: business.stars,\n      categories: business.categories,\n      phone: business.display_phone,\n      hours: business.hours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onPlaceSelected: place => setSearchLocation(place.formatted_address),\n    className: styles.Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Restaurants,\n    style: {\n      marginTop: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 28\n    }\n  }, \"Loading ...\") : returnedRes));\n};\n\nexport default Restaurants;","map":{"version":3,"sources":["/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js"],"names":["React","useEffect","useState","Fragment","axios","BusinessDataset","Restaurant","firebase","styles","Autocomplete","Restaurants","businesses","setBusinesses","loading","setLoading","searchLocation","setSearchLocation","deleteBusiness","index","newBus","splice","updateVisited","post","id","business_id","catch","err","console","log","updateVisit","getRestaurants","myVisit","myVisited","get","headers","Authorization","process","env","REACT_APP_API_KEY","params","location","categories","then","res","data","returnedRes","map","business","name","address","city","stars","display_phone","hours","place","formatted_address","Search","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json'\nimport Restaurant from './Restaurant/Restaurant'\nimport firebase from '../../axios-restaurants';\nimport styles from './Restaurants.module.css'\nimport Autocomplete from 'react-google-autocomplete'\n\n\nconst Restaurants = () => {\n    \n    const [businesses, setBusinesses] = useState([])\n    const [loading,setLoading] = useState(true)\n    const [searchLocation, setSearchLocation] = useState(null)\n\n    const deleteBusiness = (index) => {\n        const newBus = [...businesses];\n        newBus.splice(index, 1);\n        setBusinesses(newBus)\n    }\n\n    const updateVisited = (newBus,index) => {\n        deleteBusiness(index)\n        firebase.post('/visited.json',{id: newBus.business_id})\n            .catch(err => console.log(err))\n    }\n\n    const updateVisit = (newBus,index) => {\n        deleteBusiness(index)\n        firebase.post('/visit.json',{id:newBus.business_id})\n            .catch(err => console.log(err))\n    }\n\n    async function getRestaurants () {\n        let myVisit = [];\n        let myVisited = [];\n        // await axios.get('https://local-byte.firebaseio.com/visited.json')\n        // .then(res => {\n        //     const tmpVisited = Object.keys(res.data)\n        //     const visitedIds = tmpVisited.map((key) => {\n        //         return res.data[key].id\n        //     })\n        //     myVisited = [...visitedIds];\n        // }).catch(err => {\n        //     console.log(err)\n        // })\n        // await axios.get('https://local-byte.firebaseio.com/visit.json')\n        // .then(res => {\n        //     const tmpVisit = Object.keys(res.data)\n        //     const visitIds = tmpVisit.map((key) => {\n        //         return res.data[key].id\n        //     })\n        //     myVisit = [...visitIds];\n        // }).catch(err => {\n        //     console.log(err)\n        // })\n        // if (BusinessDataset){\n        //     const myRest = myVisit.concat(myVisited)\n        //     const homeRest = BusinessDataset.filter( ( el ) => !myRest.includes( el.business_id ) );\n        //     setBusinesses(homeRest)\n        //     setLoading(false)\n        //     return\n        // }\n        await axios.get(\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search\", {\n            headers: {\n                Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n            }, params: {        \n                location: searchLocation,\n                categories: 'mexican'\n            }, \n\n        }).then((res) => {\n            console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`)\n            console.log(res.data)\n            setBusinesses(res.data.businesses)\n            setLoading(false)\n\n        }).catch((err) => {\n            console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`)\n            console.log(err)\n        })\n    };\n\n    useEffect(() => {\n        if (searchLocation){\n            getRestaurants();   \n        } \n    }, [searchLocation]);\n          \n    //rating, price, phone, categories, name\n\n    const returnedRes = businesses.map((business, index) => {\n        console.log(business)\n        return <Restaurant \n            visit={() => updateVisit(business,index)}\n            visited={() => updateVisited(business,index)}\n            key={business.id}\n            name={business.name}\n            address={business.address}\n            city={business.city}\n            stars={business.stars}\n            categories={business.categories}\n            phone={business.display_phone}\n            hours={business.hours}\n        />\n    })\n\n    return (\n        <Fragment>\n            <Autocomplete\n            onPlaceSelected={(place) => setSearchLocation(place.formatted_address)}\n            className={styles.Search}/>\n            <div className = {styles.Restaurants}\n                style={{marginTop:'5px'}}>\n                {loading ? <p>Loading ...</p> : returnedRes}\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}