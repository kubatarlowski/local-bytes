{"ast":null,"code":"var _jsxFileName = \"/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json';\nimport Restaurant from './Restaurant/Restaurant';\nimport firebase from '../../axios-restaurants';\nimport styles from './Restaurants.module.css';\n\nconst Restaurants = () => {\n  const [businesses, setBusinesses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const deleteBusiness = index => {\n    const newBus = [...businesses];\n    newBus.splice(index, 1);\n    setBusinesses(newBus);\n  };\n\n  const updateVisited = (newBus, index) => {\n    deleteBusiness(index);\n    firebase.post('/visited.json', {\n      id: newBus.business_id\n    }).catch(err => console.log(err));\n  };\n\n  const updateVisit = (newBus, index) => {\n    deleteBusiness(index);\n    firebase.post('/visit.json', {\n      id: newBus.business_id\n    }).catch(err => console.log(err));\n  };\n\n  const getRestaurants = async () => {\n    setLoading(true);\n    let myVisit = [];\n    let myVisited = [];\n    await axios.get('https://local-byte.firebaseio.com/visited.json').then(res => {\n      const tmpVisited = Object.keys(res.data);\n      const visitedIds = tmpVisited.map(key => {\n        return res.data[key].id;\n      });\n      myVisited = [...visitedIds];\n    }).catch(err => {\n      console.log(err);\n    });\n    await axios.get('https://local-byte.firebaseio.com/visit.json').then(res => {\n      const tmpVisit = Object.keys(res.data);\n      const visitIds = tmpVisit.map(key => {\n        return res.data[key].id;\n      });\n      myVisit = [...visitIds];\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (BusinessDataset) {\n      const myRest = myVisit.concat(myVisited);\n      const homeRest = BusinessDataset.filter(el => !myRest.includes(el.business_id));\n      setBusinesses(homeRest);\n      setLoading(false);\n      return;\n    }\n\n    await axios.get('https://api.yelp.com/v3/businesses/search', {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        location: 'Hicksville, NY',\n        categories: 'mexican'\n      }\n    }).then(res => {\n      console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`);\n      console.log(res.data);\n      setBusinesses(res.data.businesses);\n      setLoading(false);\n    }).catch(err => {\n      console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`);\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getRestaurants();\n  }, []); //rating, price, phone, categories, name\n\n  const returnedRes = businesses.map((business, index) => {\n    return /*#__PURE__*/React.createElement(Restaurant, {\n      visit: () => updateVisit(business, index),\n      visited: () => updateVisited(business, index),\n      key: business.business_id,\n      name: business.name,\n      address: business.address,\n      city: business.city,\n      stars: business.stars,\n      categories: business.categories,\n      phone: business.display_phone,\n      hours: business.hours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Restaurants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: center\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }\n  }, \"Loading ...\") : returnedRes);\n};\n\nexport default Restaurants;","map":{"version":3,"sources":["/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js"],"names":["React","useEffect","useState","axios","BusinessDataset","Restaurant","firebase","styles","Restaurants","businesses","setBusinesses","loading","setLoading","deleteBusiness","index","newBus","splice","updateVisited","post","id","business_id","catch","err","console","log","updateVisit","getRestaurants","myVisit","myVisited","get","then","res","tmpVisited","Object","keys","data","visitedIds","map","key","tmpVisit","visitIds","myRest","concat","homeRest","filter","el","includes","headers","Authorization","process","env","REACT_APP_API_KEY","params","location","categories","returnedRes","business","name","address","city","stars","display_phone","hours","textAlign","center"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json'\nimport Restaurant from './Restaurant/Restaurant'\nimport firebase from '../../axios-restaurants';\nimport styles from './Restaurants.module.css'\nconst Restaurants = () => {\n    \n    const [businesses, setBusinesses] = useState([])\n    const [loading,setLoading] = useState(false)\n\n    const deleteBusiness = (index) => {\n        const newBus = [...businesses];\n        newBus.splice(index, 1);\n        setBusinesses(newBus)\n    }\n\n    const updateVisited = (newBus,index) => {\n        deleteBusiness(index)\n        firebase.post('/visited.json',{id: newBus.business_id})\n            .catch(err => console.log(err))\n    }\n\n    const updateVisit = (newBus,index) => {\n        deleteBusiness(index)\n        firebase.post('/visit.json',{id:newBus.business_id})\n            .catch(err => console.log(err))\n    }\n\n    const getRestaurants = async () => {\n        setLoading(true);\n\n        let myVisit = [];\n        let myVisited = [];\n        await axios.get('https://local-byte.firebaseio.com/visited.json')\n        .then(res => {\n            const tmpVisited = Object.keys(res.data)\n            const visitedIds = tmpVisited.map((key) => {\n                return res.data[key].id\n            })\n            myVisited = [...visitedIds];\n        }).catch(err => {\n            console.log(err)\n        })\n        await axios.get('https://local-byte.firebaseio.com/visit.json')\n        .then(res => {\n            const tmpVisit = Object.keys(res.data)\n            const visitIds = tmpVisit.map((key) => {\n                return res.data[key].id\n            })\n            myVisit = [...visitIds];\n        }).catch(err => {\n            console.log(err)\n        })\n        if (BusinessDataset){\n            const myRest = myVisit.concat(myVisited)\n            const homeRest = BusinessDataset.filter( ( el ) => !myRest.includes( el.business_id ) );\n            setBusinesses(homeRest)\n            setLoading(false)\n            return\n        }\n        await axios.get('https://api.yelp.com/v3/businesses/search', {\n            headers: {\n\n                Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n            \n            }, params: {        \n                location: 'Hicksville, NY',\n                categories: 'mexican'\n            },\n\n        }).then((res) => {\n            console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`)\n            console.log(res.data)\n            setBusinesses(res.data.businesses)\n            setLoading(false)\n\n        }).catch((err) => {\n            console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`)\n            console.log(err)\n        })\n    };\n\n    useEffect(() => {\n        getRestaurants();        \n    }, []);\n          \n    //rating, price, phone, categories, name\n\n    const returnedRes = businesses.map((business, index) => {\n        return <Restaurant \n            visit={() => updateVisit(business,index)}\n            visited={() => updateVisited(business,index)}\n            key={business.business_id}\n            name={business.name}\n            address={business.address}\n            city={business.city}\n            stars={business.stars}\n            categories={business.categories}\n            phone={business.display_phone}\n            hours={business.hours}\n        />\n    })\n\n    return (\n        <div className = {styles.Restaurants}>\n            {loading ? <p style={{textAlign: center}}>Loading ...</p> : returnedRes}\n        </div>\n    )\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}