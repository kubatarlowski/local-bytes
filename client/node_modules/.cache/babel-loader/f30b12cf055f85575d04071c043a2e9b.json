{"ast":null,"code":"var _jsxFileName = \"/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json';\nimport Restaurant from './Restaurant/Restaurant';\n\nconst Restaurants = () => {\n  const [businesses, setBusinesses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [visited, setVisited] = useState([]);\n  const [visit, setVisit] = useState([]);\n\n  const deleteBusiness = (_, index) => {\n    const newBus = [...businesses];\n    newBus.splice(index, 1);\n    setBusinesses(newBus);\n  };\n\n  const updateVisited = (newBus, index) => {\n    const oldVisited = [...visited];\n    console.log(oldVisited);\n    const newVisited = oldVisited.push(newBus);\n    console.log(newVisited);\n    setVisited(newVisited);\n    deleteBusiness(index);\n  };\n\n  const updateVisit = (newBus, index) => {\n    const oldVisit = [...visit];\n    const newVisit = oldVisit.push(newBus);\n    setVisit(newVisit);\n    deleteBusiness(index);\n  };\n\n  const getRestaurants = async () => {\n    setLoading(true);\n    await axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        location: 'Hicksville, NY',\n        categories: 'mexican'\n      }\n    }).then(res => {\n      console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`);\n      console.log(res.data);\n      setBusinesses(res.data.businesses);\n      setLoading(false);\n    }).catch(err => {\n      console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`);\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    setBusinesses(BusinessDataset); // getRestaurants();\n  }, []); //rating, price, phone, categories, name\n\n  const returnedRes = businesses.map((business, index) => {\n    return /*#__PURE__*/React.createElement(Restaurant, {\n      visit: () => updateVisit(business, index),\n      visited: () => updateVisited(business, index),\n      key: business.business_id,\n      name: business.name,\n      address: business.address,\n      city: business.city,\n      stars: business.stars,\n      categories: business.categories,\n      phone: business.display_phone,\n      hours: business.hours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 24\n    }\n  }, \"Loading ...\") : returnedRes);\n};\n\nexport default Restaurants;","map":{"version":3,"sources":["/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js"],"names":["React","useEffect","useState","axios","BusinessDataset","Restaurant","Restaurants","businesses","setBusinesses","loading","setLoading","visited","setVisited","visit","setVisit","deleteBusiness","_","index","newBus","splice","updateVisited","oldVisited","console","log","newVisited","push","updateVisit","oldVisit","newVisit","getRestaurants","get","headers","Authorization","process","env","REACT_APP_API_KEY","params","location","categories","then","res","data","catch","err","returnedRes","map","business","business_id","name","address","city","stars","display_phone","hours"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json'\nimport Restaurant from './Restaurant/Restaurant'\n\nconst Restaurants = () => {\n    \n    const [businesses, setBusinesses] = useState([])\n    const [loading,setLoading] = useState(false)\n    const [visited, setVisited] = useState([])\n    const [visit, setVisit] = useState([])\n\n    const deleteBusiness = (_,index) => {\n        const newBus = [...businesses];\n        newBus.splice(index, 1);\n        setBusinesses(newBus)\n    }\n\n    const updateVisited = (newBus,index) => {\n        const oldVisited = [...visited]\n        console.log(oldVisited)\n        const newVisited = oldVisited.push(newBus)\n        console.log(newVisited)\n        setVisited(newVisited)\n        deleteBusiness(index)\n    }\n\n    const updateVisit = (newBus,index) => {\n        const oldVisit= [...visit]\n        const newVisit = oldVisit.push(newBus)\n        setVisit(newVisit)\n        deleteBusiness(index)\n    }\n\n    const getRestaurants = async () => {\n        setLoading(true);\n        await axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', {\n            headers: {\n\n                Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n            \n            }, params: {        \n                location: 'Hicksville, NY',\n                categories: 'mexican'\n            },\n\n        }).then((res) => {\n            console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`)\n            console.log(res.data)\n            setBusinesses(res.data.businesses)\n            setLoading(false)\n\n        }).catch((err) => {\n            console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`)\n            console.log(err)\n        })\n    };\n\n    useEffect(() => {\n        setBusinesses(BusinessDataset)\n        // getRestaurants();\n    }, []);\n          \n    //rating, price, phone, categories, name\n    const returnedRes = businesses.map((business, index) => {\n        return <Restaurant \n            visit={() => updateVisit(business,index)}\n            visited={() => updateVisited(business,index)}\n            key={business.business_id}\n            name={business.name}\n            address={business.address}\n            city={business.city}\n            stars={business.stars}\n            categories={business.categories}\n            phone={business.display_phone}\n            hours={business.hours}\n        />\n    })\n\n    return (\n        <div>\n            {loading ? <p>Loading ...</p> : returnedRes}\n        </div>\n    )\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}