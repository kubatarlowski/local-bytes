{"ast":null,"code":"var _jsxFileName = \"/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json';\nimport Restaurant from './Restaurant/Restaurant';\nimport firebase from '../../axios-restaurants';\n\nconst Restaurants = () => {\n  const [businesses, setBusinesses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [visited, setVisited] = useState([]);\n  const [visit, setVisit] = useState([]);\n\n  const deleteBusiness = (_, index) => {\n    const newBus = [...businesses];\n    newBus.splice(index, 1);\n    setBusinesses(newBus);\n  };\n\n  const updateVisited = (newBus, index) => {\n    const oldVisited = [...visited];\n    console.log(oldVisited);\n    oldVisited.push(newBus);\n    setVisited(oldVisited);\n    deleteBusiness(index);\n    firebase.post('/visited.json', {\n      id: newBus.business_id\n    }).then(res => console.log(res)).catch(err => console.log(err));\n  };\n\n  const updateVisit = (newBus, index) => {\n    const oldVisit = [...visit];\n    oldVisit.push(newBus);\n    setVisit(oldVisit);\n    deleteBusiness(index);\n    firebase.post('/visit.json', {\n      id: newBus.business_id\n    }).then(res => console.log(res)).catch(err => console.log(err));\n  };\n\n  const getRestaurants = async () => {\n    setLoading(true);\n    await axios.get('https://local-byte.firebaseio.com/visited.json').then(res => {\n      console.log(res);\n      const tmpVisited = Object.keys(res.data);\n      const visitedIds = tmpVisited.map(key => {\n        return res.data[key].id;\n      });\n      setVisited(visitedIds);\n    }).catch(err => {\n      console.log(err);\n    });\n    await axios.get('https://local-byte.firebaseio.com/visit.json').then(res => {\n      const tmpVisit = Object.keys(res.data);\n      console.log(tmpVisit);\n      const visitIds = tmpVisit.map(key => {\n        console.log(res.data[key].id);\n        return res.data[key].id;\n      });\n      setVisit(visitIds);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (BusinessDataset) {\n      console.log(visit);\n      console.log(visited);\n      const myRest = visit.concat(visited);\n      console.log(myRest);\n      const homeRest = BusinessDataset.filter(el => !myRest.includes(el));\n      setBusinesses(homeRest);\n      setLoading(false);\n      return;\n    }\n\n    await axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        location: 'Hicksville, NY',\n        categories: 'mexican'\n      }\n    }).then(res => {\n      console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`);\n      console.log(res.data);\n      setBusinesses(res.data.businesses);\n      setLoading(false);\n    }).catch(err => {\n      console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`);\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getRestaurants();\n  }, []); //rating, price, phone, categories, name\n\n  const returnedRes = businesses.map((business, index) => {\n    return /*#__PURE__*/React.createElement(Restaurant, {\n      visit: () => updateVisit(business, index),\n      visited: () => updateVisited(business, index),\n      key: business.business_id,\n      name: business.name,\n      address: business.address,\n      city: business.city,\n      stars: business.stars,\n      categories: business.categories,\n      phone: business.display_phone,\n      hours: business.hours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 24\n    }\n  }, \"Loading ...\") : returnedRes);\n};\n\nexport default Restaurants;","map":{"version":3,"sources":["/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js"],"names":["React","useEffect","useState","axios","BusinessDataset","Restaurant","firebase","Restaurants","businesses","setBusinesses","loading","setLoading","visited","setVisited","visit","setVisit","deleteBusiness","_","index","newBus","splice","updateVisited","oldVisited","console","log","push","post","id","business_id","then","res","catch","err","updateVisit","oldVisit","getRestaurants","get","tmpVisited","Object","keys","data","visitedIds","map","key","tmpVisit","visitIds","myRest","concat","homeRest","filter","el","includes","headers","Authorization","process","env","REACT_APP_API_KEY","params","location","categories","returnedRes","business","name","address","city","stars","display_phone","hours"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json'\nimport Restaurant from './Restaurant/Restaurant'\nimport firebase from '../../axios-restaurants';\n\nconst Restaurants = () => {\n    \n    const [businesses, setBusinesses] = useState([])\n    const [loading,setLoading] = useState(false)\n    const [visited, setVisited] = useState([])\n    const [visit, setVisit] = useState([])\n\n    const deleteBusiness = (_,index) => {\n        const newBus = [...businesses];\n        newBus.splice(index, 1);\n        setBusinesses(newBus)\n    }\n\n    const updateVisited = (newBus,index) => {\n        const oldVisited = [...visited]\n        console.log(oldVisited)\n        oldVisited.push(newBus)\n        setVisited(oldVisited)\n        deleteBusiness(index)\n        firebase.post('/visited.json',{id: newBus.business_id})\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    const updateVisit = (newBus,index) => {\n        const oldVisit= [...visit]\n        oldVisit.push(newBus)\n        setVisit(oldVisit)\n        deleteBusiness(index)\n        firebase.post('/visit.json',{id:newBus.business_id})\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    const getRestaurants = async () => {\n        setLoading(true);\n        await axios.get('https://local-byte.firebaseio.com/visited.json')\n        .then(res => {\n            console.log(res)\n            const tmpVisited = Object.keys(res.data)\n            const visitedIds = tmpVisited.map((key) => {\n                return res.data[key].id\n            })\n            setVisited(visitedIds)\n        }).catch(err => {\n            console.log(err)\n        })\n        await axios.get('https://local-byte.firebaseio.com/visit.json')\n        .then(res => {\n            const tmpVisit = Object.keys(res.data)\n            console.log(tmpVisit)\n            const visitIds = tmpVisit.map((key) => {\n                console.log(res.data[key].id)\n                return res.data[key].id\n            })\n            setVisit(visitIds)\n        }).catch(err => {\n            console.log(err)\n        })\n        if (BusinessDataset){\n            console.log(visit)\n            console.log(visited)\n            const myRest = visit.concat(visited)\n            console.log(myRest)\n            const homeRest = BusinessDataset.filter( ( el ) => !myRest.includes( el ) );\n            setBusinesses(homeRest)\n            setLoading(false)\n            return\n        }\n        await axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', {\n            headers: {\n\n                Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n            \n            }, params: {        \n                location: 'Hicksville, NY',\n                categories: 'mexican'\n            },\n\n        }).then((res) => {\n            console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`)\n            console.log(res.data)\n            setBusinesses(res.data.businesses)\n            setLoading(false)\n\n        }).catch((err) => {\n            console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`)\n            console.log(err)\n        })\n    };\n\n    useEffect(() => {\n        getRestaurants();        \n    }, []);\n          \n    //rating, price, phone, categories, name\n\n    const returnedRes = businesses.map((business, index) => {\n        return <Restaurant \n            visit={() => updateVisit(business,index)}\n            visited={() => updateVisited(business,index)}\n            key={business.business_id}\n            name={business.name}\n            address={business.address}\n            city={business.city}\n            stars={business.stars}\n            categories={business.categories}\n            phone={business.display_phone}\n            hours={business.hours}\n        />\n    })\n\n    return (\n        <div>\n            {loading ? <p>Loading ...</p> : returnedRes}\n        </div>\n    )\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}