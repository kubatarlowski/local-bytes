{"ast":null,"code":"var _jsxFileName = \"/home/kubatarlowski/local-bytes/client/src/Components/Categories/Categories.js\";\nimport React, { useState } from 'react';\nimport styles from './Categories.module.css';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst Categories = props => {\n  let initalizedCheckedCat = {};\n  props.categories.forEach(element => {\n    initalizedCheckedCat[element] = false;\n  });\n  const [checkedCat, setCheckedCat] = useState(initalizedCheckedCat);\n\n  function updateChecked(category) {\n    const oldChecked = { ...checkedCat\n    };\n    oldChecked[category] = !checkedCat[category];\n    setCheckedCat(oldChecked);\n  }\n\n  const checkboxes = props.categories.map(cat => {\n    if (cat === 'breakfast_brunch') {\n      cat = 'Breakfast Brunch';\n    }\n\n    if (cat === 'mideastern') {\n      cat = 'Middle Eastern';\n    }\n\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      style: {\n        textTransform: 'capitalize'\n      },\n      key: cat,\n      label: cat,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: () => {\n          props.checked(cat, !checkedCat[cat]);\n          updateChecked(cat);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, checkboxes);\n};\n\nexport default Categories;","map":{"version":3,"sources":["/home/kubatarlowski/local-bytes/client/src/Components/Categories/Categories.js"],"names":["React","useState","styles","Checkbox","FormControlLabel","Categories","props","initalizedCheckedCat","categories","forEach","element","checkedCat","setCheckedCat","updateChecked","category","oldChecked","checkboxes","map","cat","textTransform","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAExB,MAAIC,oBAAoB,GAAG,EAA3B;AACAD,EAAAA,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAAyBC,OAAO,IAAI;AAChCH,IAAAA,oBAAoB,CAACG,OAAD,CAApB,GAAgC,KAAhC;AACH,GAFD;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACM,oBAAD,CAA5C;;AAGA,WAASM,aAAT,CAAuBC,QAAvB,EAAiC;AAC7B,UAAMC,UAAU,GAAG,EAAC,GAAGJ;AAAJ,KAAnB;AACAI,IAAAA,UAAU,CAACD,QAAD,CAAV,GAAuB,CAACH,UAAU,CAACG,QAAD,CAAlC;AACAF,IAAAA,aAAa,CAACG,UAAD,CAAb;AACH;;AAED,QAAMC,UAAU,GAAGV,KAAK,CAACE,UAAN,CAAiBS,GAAjB,CAAsBC,GAAD,IAAS;AAC7C,QAAIA,GAAG,KAAG,kBAAV,EAA6B;AACzBA,MAAAA,GAAG,GAAC,kBAAJ;AACH;;AAED,QAAIA,GAAG,KAAG,YAAV,EAAuB;AACnBA,MAAAA,GAAG,GAAC,gBAAJ;AACH;;AAED,wBACI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OADX;AAGI,MAAA,GAAG,EAAED,GAHT;AAII,MAAA,KAAK,EAAEA,GAJX;AAKI,MAAA,OAAO,eAAE,oBAAC,QAAD;AACL,QAAA,QAAQ,EAAE,MAAK;AACfZ,UAAAA,KAAK,CAACc,OAAN,CAAcF,GAAd,EAAkB,CAACP,UAAU,CAACO,GAAD,CAA7B;AACAL,UAAAA,aAAa,CAACK,GAAD,CAAb;AAEH,SALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAYS,GArBM,CAAnB;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACG,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKW,UADL,CADJ;AAKH,CA5CD;;AA8CA,eAAeX,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from './Categories.module.css';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst Categories = props => {\n\n    let initalizedCheckedCat = {}    \n    props.categories.forEach(element => {\n        initalizedCheckedCat[element] = false;\n    })\n\n    const [checkedCat, setCheckedCat] = useState(initalizedCheckedCat)\n\n\n    function updateChecked(category) {\n        const oldChecked = {...checkedCat}\n        oldChecked[category] = !checkedCat[category]\n        setCheckedCat(oldChecked)\n    }\n\n    const checkboxes = props.categories.map((cat) => {\n        if (cat==='breakfast_brunch'){\n            cat='Breakfast Brunch'\n        }\n\n        if (cat==='mideastern'){\n            cat='Middle Eastern'\n        }\n\n        return (\n            <FormControlLabel\n                style={{textTransform: 'capitalize',\n                        }}\n                key={cat}\n                label={cat}\n                control={<Checkbox\n                    onChange={()=> {\n                    props.checked(cat,!checkedCat[cat])\n                    updateChecked(cat)\n\n                }}/>\n            }/>)})\n\n    return (\n        <div className={styles.Categories}>\n            {checkboxes}\n        </div>\n    )\n}\n\nexport default Categories;"]},"metadata":{},"sourceType":"module"}