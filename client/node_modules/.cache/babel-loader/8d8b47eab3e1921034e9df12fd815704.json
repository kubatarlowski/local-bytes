{"ast":null,"code":"var _jsxFileName = \"/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json';\nimport Restaurant from './Restaurant/Restaurant';\n\nconst Restaurants = () => {\n  const [businesses, setBusinesses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getRestaurants = async () => {\n    setLoading(true);\n    await axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        location: 'Hicksville, NY',\n        categories: 'mexican'\n      }\n    }).then(res => {\n      console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`);\n      console.log(res.data);\n      setBusinesses(res.data.businesses);\n      setLoading(false);\n    }).catch(err => {\n      console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`);\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    console.log(BusinessDataset);\n    setBusinesses(BusinessDataset); // getRestaurants();\n  }, []); //rating, price, phone, categories, name\n\n  const returnedRes = businesses.map(business => {\n    return /*#__PURE__*/React.createElement(Restaurant, {\n      key: business.id,\n      name: business.name,\n      location: business.location,\n      rating: business.rating,\n      categories: business.categories,\n      phone: business.display_phone,\n      hours: business.hours,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  });\n  console.log('tranformed res', returnedRes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, returnedRes);\n};\n\nexport default Restaurants;","map":{"version":3,"sources":["/home/kubatarlowski/local-bytes/src/Components/Restaurants/Restaurants.js"],"names":["React","useEffect","useState","axios","BusinessDataset","Restaurant","Restaurants","businesses","setBusinesses","loading","setLoading","getRestaurants","get","headers","Authorization","process","env","REACT_APP_API_KEY","params","location","categories","then","res","console","log","data","catch","err","returnedRes","map","business","id","name","rating","display_phone","hours"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMS,cAAc,GAAG,YAAY;AAC/BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMP,KAAK,CAACS,GAAN,CAAU,+EAAV,EAA2F;AAC7FC,MAAAA,OAAO,EAAE;AAELC,QAAAA,aAAa,EAAG,UAASC,OAAO,CAACC,GAAR,CAAYC,iBAAkB;AAFlD,OADoF;AAK1FC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAE,gBADH;AAEPC,QAAAA,UAAU,EAAE;AAFL;AALkF,KAA3F,EAUHC,IAVG,CAUGC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYT,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAAvD;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAjB,MAAAA,aAAa,CAACc,GAAG,CAACG,IAAJ,CAASlB,UAAV,CAAb;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,KAhBK,EAgBHgB,KAhBG,CAgBIC,GAAD,IAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBT,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAA7D;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KAnBK,CAAN;AAoBH,GAtBD;;AAwBA1B,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,eAAZ;AACAI,IAAAA,aAAa,CAACJ,eAAD,CAAb,CAFY,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT,CA7BsB,CAmC1B;;AACI,QAAMwB,WAAW,GAAGrB,UAAU,CAACsB,GAAX,CAAgBC,QAAD,IAAc;AAC7C,wBAAO,oBAAC,UAAD;AACH,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADX;AAEH,MAAA,IAAI,EAAED,QAAQ,CAACE,IAFZ;AAGH,MAAA,QAAQ,EAAEF,QAAQ,CAACX,QAHhB;AAIH,MAAA,MAAM,EAAEW,QAAQ,CAACG,MAJd;AAKH,MAAA,UAAU,EAAEH,QAAQ,CAACV,UALlB;AAMH,MAAA,KAAK,EAAEU,QAAQ,CAACI,aANb;AAOH,MAAA,KAAK,EAAEJ,QAAQ,CAACK,KAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASH,GAVmB,CAApB;AAYAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,WAA9B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,WADL,CADJ;AAKH,CAtDD;;AAwDA,eAAetB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BusinessDataset from '../../Yelp_Data/sample_businesses.json'\nimport Restaurant from './Restaurant/Restaurant'\n\nconst Restaurants = () => {\n    \n    const [businesses, setBusinesses] = useState([])\n    const [loading,setLoading] = useState(false)\n\n    const getRestaurants = async () => {\n        setLoading(true);\n        await axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', {\n            headers: {\n\n                Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n            \n            }, params: {        \n                location: 'Hicksville, NY',\n                categories: 'mexican'\n            },\n\n        }).then((res) => {\n            console.log(`[API KEY] ${process.env.REACT_APP_API_KEY}`)\n            console.log(res.data)\n            setBusinesses(res.data.businesses)\n            setLoading(false)\n\n        }).catch((err) => {\n            console.log(`[API KEY ERROR] ${process.env.REACT_APP_API_KEY}`)\n            console.log(err)\n        })\n    };\n\n    useEffect(() => {\n        console.log(BusinessDataset)\n        setBusinesses(BusinessDataset)\n        // getRestaurants();\n    }, []);\n          \n//rating, price, phone, categories, name\n    const returnedRes = businesses.map((business) => {\n        return <Restaurant \n            key={business.id}\n            name={business.name}\n            location={business.location}\n            rating={business.rating}\n            categories={business.categories}\n            phone={business.display_phone}\n            hours={business.hours}\n        />\n    })\n\n    console.log('tranformed res', returnedRes)\n    return (\n        <div>\n            {returnedRes}\n        </div>\n    )\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}